
@model WissenTeknikServis.Entity.ViewModel.ArizaViewModel
@{
    ViewBag.Title = "ArizaKayit";
    Layout = "~/Views/Shared/_LayoutGenel.cshtml";
}

<div class="container">
    <div class="row" style="background-color:#808080; margin-right:0px; margin-left:0px;">
        
        <div class="col-md-12">
            <h2 style="color:white"></h2>
            <form id="form" method="post" action="#"></form>
            <div class="form-group">
            </div>
            @using (Html.BeginForm("ArizaKayit", "Home", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary()

                <div class="row">
                    <div class="col-md-7">

                        @*<div class="form-group input-group-sm">
                            @Html.LabelFor(x => x.FirmaAdi, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(x => x.FirmaAdi, new { @class = "form-control" })
                            </div>
                        </div>*@

                        <div class="form-group input-group-sm">
                            @Html.LabelFor(x => x.Baslik, new { @class = " col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(x => x.Baslik, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group input-group-sm">
                            @Html.LabelFor(x => x.Aciklama, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(x => x.Aciklama, 5, 10, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group input-group-sm">
                            @Html.LabelFor(x => x.AdresAciklamasi, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(x => x.AdresAciklamasi, 5, 10, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group input-group-sm">
                            @Html.LabelFor(x => x.Fotograflar, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(x => x.Fotograflar, new { @class = "form-control", type = "file", multiple = true, accept = ".jpeg , .jpg,.gif" })
                            </div>
                        </div>
                        <div class="form-group ">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="submit" class="btn btn-primary">Arıza  Oluştur</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="panel panel-primary">
                            <div class="panel-heading">Konumunuz</div>
                            <div class="panel-body" id="map" style="height:300px;"></div>
                            @Html.HiddenFor(x => x.lat, new { id = "lat" })
                            @Html.HiddenFor(x => x.lng, new { id = "long" })
                        </div>
                        <div class="panel-footer">Haritadan konumunuzu işaretleyin</div>
                    </div>

                </div>


            }
        </div>
    </div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP53g7yo4Rm0Fc5qFg7_iiK3k8AWSNuyE&libraries=places" type="text/javascript"></script>

<script type="text/javascript">
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    }
    else {
        alert("Tarayıcınız lokasyon desteklemiyor!...")
    }
    function showPosition(pos) {
        console.log(pos);
        var lokasyonlat = pos.coords.latitude;
        var lokasyonlong = pos.coords.longitude;
        var latlng = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
        var options = {
            zoom: 12,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            draggableCursor: "crosshair",
            scrollwheel: true,
            streetViewControl: false
        };
        var map = new google.maps.Map(document.getElementById("map"), options);
        var isagretci = new google.maps.Marker({
            position: latlng,
            map: map,
            title: "Bulunduğunuz Konum"
        });
        google.maps.event.addListener(map, "click", function (location) {
            GetLocationInfo(location.latLng);
            lokasyonlat = location.latLng.lat();
            lokasyonlong = location.latLng.lng();
            $("#lat").val(lokasyonlat);
            $("#long").val(lokasyonlong);
        });
        function GetLocationInfo(latlng) {
            if (latlng != null) {
                ShowLatLong(latlng);
            }
        }
        function GotoLatLong() {
            if ($("#lat").val() != "" && $("#long").val() != "") {
                var lat = $("#lat").val();
                var long = $("#long").val();
                var latLong = new google.maps.LatLng(lat, long);
                ShowLatLong(latLong);
                map.setCenter(latLong);
                UpdateStreetView(latLong);
            }
        }
        function ShowLatLong(latLong) {
            if (isagretci != null) { 
                isagretci.setMap(null);
            }
            isagretci = new google.maps.Marker({
                position: latLong,
                animation: google.maps.Animation.BOUNCE,
                map: map,
                title: "Konumunuz"
            });
        }
        $("#lat").val(lokasyonlat);
        $("#long").val(lokasyonlong);
    }
</script>